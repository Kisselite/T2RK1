
package t2no2api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.1-hudson-28-
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "T2NO2ApiService", targetNamespace = "urn:T2NO2Api", wsdlLocation = "http://esi.vels.dev.modera.net/project/service/server.php?wsdl")
public class T2NO2ApiService
    extends Service
{

    private final static URL T2NO2APISERVICE_WSDL_LOCATION;
    private final static WebServiceException T2NO2APISERVICE_EXCEPTION;
    private final static QName T2NO2APISERVICE_QNAME = new QName("urn:T2NO2Api", "T2NO2ApiService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://esi.vels.dev.modera.net/project/service/server.php?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        T2NO2APISERVICE_WSDL_LOCATION = url;
        T2NO2APISERVICE_EXCEPTION = e;
    }

    public T2NO2ApiService() {
        super(__getWsdlLocation(), T2NO2APISERVICE_QNAME);
    }

    public T2NO2ApiService(WebServiceFeature... features) {
        super(__getWsdlLocation(), T2NO2APISERVICE_QNAME, features);
    }

    public T2NO2ApiService(URL wsdlLocation) {
        super(wsdlLocation, T2NO2APISERVICE_QNAME);
    }

    public T2NO2ApiService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, T2NO2APISERVICE_QNAME, features);
    }

    public T2NO2ApiService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public T2NO2ApiService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns T2NO2ApiPortType
     */
    @WebEndpoint(name = "T2NO2ApiPort")
    public T2NO2ApiPortType getT2NO2ApiPort() {
        return super.getPort(new QName("urn:T2NO2Api", "T2NO2ApiPort"), T2NO2ApiPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns T2NO2ApiPortType
     */
    @WebEndpoint(name = "T2NO2ApiPort")
    public T2NO2ApiPortType getT2NO2ApiPort(WebServiceFeature... features) {
        return super.getPort(new QName("urn:T2NO2Api", "T2NO2ApiPort"), T2NO2ApiPortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (T2NO2APISERVICE_EXCEPTION!= null) {
            throw T2NO2APISERVICE_EXCEPTION;
        }
        return T2NO2APISERVICE_WSDL_LOCATION;
    }

}
